#################################################################
##################### Light automations #########################
#################################################################

- alias: 'Auto turn off lights'
  trigger:
  - at: '23:00'
    platform: time
  - event: sunrise
    offset: 01:00:00
    platform: sun
  condition: []
  action:
    service: script.turn_on
    target:
      entity_id: script.all_lights_out

- alias: 'Lights at sunset'
  trigger:
  - event: sunset
    offset: -01:00:00
    platform: sun
  condition: []
  action:
  - data:
      brightness_pct: '30'
      entity_id:
        - light.living_room_lights
        - light.bedroom_window
        - light.extra_bedroom_lights
        - light.office_lights
        - light.bedroom_advent
    service: light.turn_on
  - data:
      brightness_pct: '1'
      entity_id:
        - light.office_lights
    service: light.turn_on


- alias: 'Lights in the morning'
  trigger:
  - at: 05:30
    platform: time
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data:
      brightness_pct: '30'
      entity_id:
        - light.living_room_lights
        - light.extra_bedroom_lights
        - light.office_lights
        - light.extra_bedroom_lights
    service: light.turn_on

#################################################################
################### Wake up automations #########################
#################################################################

#- alias: Update wake up time
#  trigger:
#    - platform: state
#      entity_id: sensor.erik_phone_next_alarm
#  action:
#    - service: input_datetime.set_datetime
#      target:
#        entity_id: input_datetime.wakeup_lights_on
#      data:
#        datetime: "{{ (as_datetime(states('sensor.erik_phone_next_alarm')) - timedelta(minutes=15)) | as_local }}"

- alias: Wakeup lights
  trigger:
    - platform: time
      at: input_datetime.wakeup_lights_on
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: person.erik
          state: "home"
        - condition: time
          after: "04:00:00"
          before: "09:00:00"
  action:
    - data:
        brightness_pct: '99'
        entity_id: light.bedroom_roof
        transition: '900'
      service: light.turn_on


#- alias: Trigger radio
#  trigger:
#    platform: template
#    value_template: "{{ strptime(states('sensor.phone_alarm_time'), '%Y-%m-%d %H:%M') == strptime(states('sensor.date_time'), '%Y-%m-%d, %H:%M') }}"
#  condition: []
#  action:
#  - data: {}
#    service: script.start_radio_in_bedroom

#################################################################
##################### TV automations ############################
#################################################################

- alias: TV paused
  trigger:
    - platform: state
      entity_id: 'media_player.living_room_tv'
      from: 'playing'
      to: 'paused'
  action:
      service: scene.turn_on
      entity_id: scene.livingroom_normal

- alias: TV playing
  trigger:
    - platform: state
      entity_id: 'media_player.living_room_tv'
      from: 'paused'
      to: 'playing'
  action:
      service: scene.turn_on
      entity_id: scene.livingroom_dim

#################################################################
################### Motion sensor automations ###################
#################################################################
- alias: Entrance motion activate
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_occupancy
      to: 'on'
  action:
      service: scene.turn_on
      target:
         entity_id: scene.occupied_entrance

- alias: Entrance motion deactivate
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_occupancy
      to: 'off'
  action:
      service: scene.turn_on
      target:
         entity_id: scene.empty_entrance


